// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: genesis.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the module's genesis state.
type GenesisState struct {
	// module parameters
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// chat
type Params struct {
	//
	MinMortgageCoin types.Coin `protobuf:"bytes,1,opt,name=minMortgageCoin,proto3" json:"minMortgageCoin"`
	//
	MaxPhoneNumber uint64 `protobuf:"varint,2,opt,name=maxPhoneNumber,proto3" json:"maxPhoneNumber,omitempty"`
	//att
	DestroyPhoneNumberCoin types.Coin `protobuf:"bytes,3,opt,name=destroyPhoneNumberCoin,proto3" json:"destroyPhoneNumberCoin"`
	//att 
	PreAttCoin types.Coin `protobuf:"bytes,4,opt,name=preAttCoin,proto3" json:"preAttCoin"`
	//att 
	PreAttAccount string `protobuf:"bytes,5,opt,name=preAttAccount,proto3" json:"preAttAccount,omitempty"`
	//att 
	AttDestroyPercent github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,6,opt,name=attDestroyPercent,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"attDestroyPercent" yaml:"att_destroy_percent"`
	//att 
	AttGatewayPercent github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,7,opt,name=attGatewayPercent,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"attGatewayPercent" yaml:"att_gateway_percent"`
	//att dpos
	AttDposPercent github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,8,opt,name=attDposPercent,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"attDposPercent" yaml:"att_dpos_percent"`
	//
	ChatFee types.Coin `protobuf:"bytes,9,opt,name=chatFee,proto3" json:"chatFee"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{1}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMinMortgageCoin() types.Coin {
	if m != nil {
		return m.MinMortgageCoin
	}
	return types.Coin{}
}

func (m *Params) GetMaxPhoneNumber() uint64 {
	if m != nil {
		return m.MaxPhoneNumber
	}
	return 0
}

func (m *Params) GetDestroyPhoneNumberCoin() types.Coin {
	if m != nil {
		return m.DestroyPhoneNumberCoin
	}
	return types.Coin{}
}

func (m *Params) GetPreAttCoin() types.Coin {
	if m != nil {
		return m.PreAttCoin
	}
	return types.Coin{}
}

func (m *Params) GetPreAttAccount() string {
	if m != nil {
		return m.PreAttAccount
	}
	return ""
}

func (m *Params) GetChatFee() types.Coin {
	if m != nil {
		return m.ChatFee
	}
	return types.Coin{}
}

type ChatReward struct {
	//
	Height int64 `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	//
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (m *ChatReward) Reset()         { *m = ChatReward{} }
func (m *ChatReward) String() string { return proto.CompactTextString(m) }
func (*ChatReward) ProtoMessage()    {}
func (*ChatReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{2}
}
func (m *ChatReward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChatReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChatReward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChatReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatReward.Merge(m, src)
}
func (m *ChatReward) XXX_Size() int {
	return m.Size()
}
func (m *ChatReward) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatReward.DiscardUnknown(m)
}

var xxx_messageInfo_ChatReward proto.InternalMessageInfo

func (m *ChatReward) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ChatReward) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "freemasonry.chat.v1.GenesisState")
	proto.RegisterType((*Params)(nil), "freemasonry.chat.v1.Params")
	proto.RegisterType((*ChatReward)(nil), "freemasonry.chat.v1.chatReward")
}

func init() { proto.RegisterFile("genesis.proto", fileDescriptor_14205810582f3203) }

var fileDescriptor_14205810582f3203 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x63, 0x9a, 0xa4, 0x64, 0xa1, 0x45, 0x2c, 0x55, 0x09, 0x01, 0x39, 0x51, 0x84, 0xa2,
	0x5c, 0xd8, 0x55, 0xe0, 0xd4, 0x5e, 0xa0, 0xa1, 0xa2, 0x44, 0x02, 0x54, 0x19, 0x09, 0x24, 0x2e,
	0xd5, 0x7a, 0x33, 0x38, 0x56, 0xe3, 0x5d, 0xe3, 0x9d, 0xb4, 0x0d, 0x4f, 0xc1, 0x63, 0xf5, 0xd8,
	0x23, 0xe2, 0x10, 0x41, 0xf2, 0x06, 0x3c, 0x01, 0xb2, 0xbd, 0x85, 0x24, 0x80, 0x14, 0xc4, 0xc9,
	0x3b, 0xe3, 0x99, 0xff, 0xfb, 0x47, 0x3b, 0x4b, 0x36, 0x02, 0x50, 0x60, 0x42, 0xc3, 0xe2, 0x44,
	0xa3, 0xa6, 0xb7, 0xde, 0x27, 0x00, 0x91, 0x30, 0x5a, 0x25, 0x63, 0x26, 0x07, 0x02, 0xd9, 0x49,
	0xa7, 0x76, 0x2f, 0xd0, 0x3a, 0x18, 0x02, 0x17, 0x71, 0xc8, 0x85, 0x52, 0x1a, 0x05, 0x86, 0x5a,
	0xd9, 0x96, 0xda, 0x56, 0xa0, 0x03, 0x9d, 0x1d, 0x79, 0x7a, 0xb2, 0x59, 0x57, 0x6a, 0x13, 0x69,
	0xc3, 0x7d, 0x61, 0x80, 0x9f, 0x74, 0x7c, 0x40, 0xd1, 0xe1, 0x52, 0x87, 0x2a, 0xff, 0xdf, 0xec,
	0x91, 0xeb, 0x07, 0x39, 0xf9, 0x35, 0x0a, 0x04, 0xba, 0x43, 0xca, 0xb1, 0x48, 0x44, 0x64, 0xaa,
	0x4e, 0xc3, 0x69, 0x5f, 0x7b, 0x78, 0x97, 0xfd, 0xc1, 0x09, 0x3b, 0xcc, 0x4a, 0xba, 0xc5, 0xf3,
	0x49, 0xbd, 0xe0, 0xd9, 0x86, 0xe6, 0xb7, 0x12, 0x29, 0xe7, 0x3f, 0x68, 0x8f, 0xdc, 0x88, 0x42,
	0xf5, 0x52, 0x27, 0x18, 0x88, 0x00, 0x9e, 0xea, 0x50, 0x59, 0xb9, 0x3b, 0x2c, 0xf7, 0xc3, 0x52,
	0x3f, 0xcc, 0xfa, 0x61, 0x69, 0x81, 0x15, 0x5b, 0xee, 0xa3, 0x2d, 0xb2, 0x19, 0x89, 0xb3, 0xc3,
	0x81, 0x56, 0xf0, 0x6a, 0x14, 0xf9, 0x90, 0x54, 0xaf, 0x34, 0x9c, 0x76, 0xd1, 0x5b, 0xca, 0xd2,
	0xb7, 0x64, 0xbb, 0x0f, 0x06, 0x13, 0x3d, 0x9e, 0xcb, 0x66, 0xe4, 0xb5, 0xd5, 0xc8, 0x7f, 0x69,
	0xa7, 0x8f, 0x09, 0x89, 0x13, 0xd8, 0x43, 0xcc, 0xc4, 0x8a, 0xab, 0x89, 0xcd, 0xb5, 0xd0, 0xfb,
	0x64, 0x23, 0x8f, 0xf6, 0xa4, 0xd4, 0x23, 0x85, 0xd5, 0x52, 0xc3, 0x69, 0x57, 0xbc, 0xc5, 0x24,
	0xfd, 0x48, 0x6e, 0x0a, 0xc4, 0x7d, 0xeb, 0x01, 0x12, 0x09, 0x0a, 0xab, 0xe5, 0xb4, 0xb2, 0xfb,
	0x22, 0x95, 0xfc, 0x32, 0xa9, 0xb7, 0x82, 0x10, 0x07, 0x23, 0x9f, 0x49, 0x1d, 0x71, 0x7b, 0xad,
	0xf9, 0xe7, 0x81, 0xe9, 0x1f, 0x73, 0x1c, 0xc7, 0x60, 0xd8, 0x3e, 0xc8, 0xef, 0x93, 0x7a, 0x6d,
	0x2c, 0xa2, 0xe1, 0x6e, 0x53, 0x20, 0x1e, 0xd9, 0xa9, 0x8e, 0xe2, 0x5c, 0xb2, 0xe9, 0xfd, 0x8e,
	0xb1, 0xec, 0x03, 0x81, 0x70, 0x2a, 0x7e, 0xb2, 0xd7, 0xff, 0x9f, 0x1d, 0xe4, 0x8a, 0x8b, 0xec,
	0x45, 0x0c, 0xfd, 0x40, 0x36, 0x53, 0x43, 0xb1, 0x36, 0x97, 0xe0, 0xab, 0x19, 0xb8, 0xf7, 0xcf,
	0xe0, 0xdb, 0x73, 0x43, 0xc7, 0xda, 0xfc, 0xa2, 0x2e, 0x01, 0xe8, 0x0e, 0x59, 0x4f, 0x17, 0xf9,
	0x19, 0x40, 0xb5, 0xb2, 0xda, 0x75, 0x5e, 0xd6, 0x37, 0x77, 0x09, 0x49, 0x8f, 0x1e, 0x9c, 0x8a,
	0xa4, 0x4f, 0xb7, 0x49, 0xf9, 0x39, 0x84, 0xc1, 0x00, 0xb3, 0xed, 0x5e, 0xf3, 0x6c, 0x44, 0xb7,
	0x48, 0xe9, 0x8d, 0x18, 0x8e, 0x20, 0x5b, 0xd5, 0x8a, 0x97, 0x07, 0xdd, 0x27, 0xe7, 0x53, 0xd7,
	0xb9, 0x98, 0xba, 0xce, 0xd7, 0xa9, 0xeb, 0x7c, 0x9a, 0xb9, 0x85, 0x8b, 0x99, 0x5b, 0xf8, 0x3c,
	0x73, 0x0b, 0xef, 0x5a, 0x0b, 0x6f, 0x4c, 0x72, 0x7f, 0xa8, 0xe5, 0xb1, 0x1c, 0x88, 0x50, 0xf1,
	0x33, 0x9e, 0xf2, 0xf2, 0x39, 0xfd, 0x72, 0xf6, 0x66, 0x1f, 0xfd, 0x08, 0x00, 0x00, 0xff, 0xff,
	0xc7, 0xd7, 0x4f, 0xfe, 0x2d, 0x04, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ChatFee.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	{
		size := m.AttDposPercent.Size()
		i -= size
		if _, err := m.AttDposPercent.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.AttGatewayPercent.Size()
		i -= size
		if _, err := m.AttGatewayPercent.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.AttDestroyPercent.Size()
		i -= size
		if _, err := m.AttDestroyPercent.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if len(m.PreAttAccount) > 0 {
		i -= len(m.PreAttAccount)
		copy(dAtA[i:], m.PreAttAccount)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.PreAttAccount)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.PreAttCoin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size, err := m.DestroyPhoneNumberCoin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.MaxPhoneNumber != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.MaxPhoneNumber))
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.MinMortgageCoin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ChatReward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChatReward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChatReward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if m.Height != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MinMortgageCoin.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if m.MaxPhoneNumber != 0 {
		n += 1 + sovGenesis(uint64(m.MaxPhoneNumber))
	}
	l = m.DestroyPhoneNumberCoin.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.PreAttCoin.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.PreAttAccount)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = m.AttDestroyPercent.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.AttGatewayPercent.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.AttDposPercent.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.ChatFee.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func (m *ChatReward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovGenesis(uint64(m.Height))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinMortgageCoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinMortgageCoin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPhoneNumber", wireType)
			}
			m.MaxPhoneNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPhoneNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestroyPhoneNumberCoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DestroyPhoneNumberCoin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreAttCoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PreAttCoin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreAttAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PreAttAccount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttDestroyPercent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AttDestroyPercent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttGatewayPercent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AttGatewayPercent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttDposPercent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AttDposPercent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ChatFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChatReward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: chatReward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: chatReward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
